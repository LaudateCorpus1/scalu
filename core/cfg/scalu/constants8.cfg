echo "loading constants"

// ---CONSTANT 0 ( 8 BIT; ver: 1.0 )

alias c0cb c0b1
alias c0cr c0r1
alias c0eb c0b8
alias flag_c0_cycle ctrue

alias c0_is_a "alias racycle c0cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c0_cycle; alias flag_order beta; alias raend c0eb"
alias c0_is_b "alias rbcycle c0cr; alias cycle_flag_beta flag_c0_cycle; alias rbend c0eb"

alias c0_init "alias alpha c0_is_a; alias beta c0_is_b; flag_order; alias c0 c0cb; c0cb"
alias c0 c0_init

alias c0b1 bfalse
alias c0b2 bfalse
alias c0b3 bfalse
alias c0b4 bfalse
alias c0b5 bfalse
alias c0b6 bfalse
alias c0b7 bfalse
alias c0b8 bfalse

alias c0r1 "alias c0cb c0b2; alias c0cr c0r2; alias flag_c0_cycle cfalse"
alias c0r2 "alias c0cb c0b3; alias c0cr c0r3"
alias c0r3 "alias c0cb c0b4; alias c0cr c0r4"
alias c0r4 "alias c0cb c0b5; alias c0cr c0r5"
alias c0r5 "alias c0cb c0b6; alias c0cr c0r6"
alias c0r6 "alias c0cb c0b7; alias c0cr c0r7"
alias c0r7 "alias c0cb c0b8; alias c0cr c0r8"
alias c0r8 "alias c0cb c0b1; alias c0cr c0r1; alias flag_c0_cycle ctrue; alias c0 c0_init"

// ---CONSTANT 1 ( 8 BIT; ver: 1.0 )

alias c1cb c1b1
alias c1cr c1r1
alias c1eb c1b8
alias flag_c1_cycle ctrue

alias c1_is_a "alias racycle c1cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c1_cycle; alias flag_order beta; alias raend c1eb"
alias c1_is_b "alias rbcycle c1cr; alias cycle_flag_beta flag_c1_cycle; alias rbend c1eb"

alias c1_init "alias alpha c1_is_a; alias beta c1_is_b; flag_order; alias c1 c1cb; c1cb"
alias c1 c1_init

alias c1b1 btrue
alias c1b2 bfalse
alias c1b3 bfalse
alias c1b4 bfalse
alias c1b5 bfalse
alias c1b6 bfalse
alias c1b7 bfalse
alias c1b8 bfalse

alias c1r1 "alias c1cb c1b2; alias c1cr c1r2; alias flag_c1_cycle cfalse"
alias c1r2 "alias c1cb c1b3; alias c1cr c1r3"
alias c1r3 "alias c1cb c1b4; alias c1cr c1r4"
alias c1r4 "alias c1cb c1b5; alias c1cr c1r5"
alias c1r5 "alias c1cb c1b6; alias c1cr c1r6"
alias c1r6 "alias c1cb c1b7; alias c1cr c1r7"
alias c1r7 "alias c1cb c1b8; alias c1cr c1r8"
alias c1r8 "alias c1cb c1b1; alias c1cr c1r1; alias flag_c1_cycle ctrue; alias c1 c1_init"


// ---CONSTANT 2 ( 8 BIT; ver: 1.0 )

alias c2cb c2b1
alias c2cr c2r1
alias c2eb c2b8
alias flag_c2_cycle ctrue

alias c2_is_a "alias racycle c2cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c2_cycle; alias flag_order beta; alias raend c2eb"
alias c2_is_b "alias rbcycle c2cr; alias cycle_flag_beta flag_c2_cycle; alias rbend c2eb"

alias c2_init "alias alpha c2_is_a; alias beta c2_is_b; flag_order; alias c2 c2cb; c2cb"
alias c2 c2_init

alias c2b1 bfalse
alias c2b2 btrue
alias c2b3 bfalse
alias c2b4 bfalse
alias c2b5 bfalse
alias c2b6 bfalse
alias c2b7 bfalse
alias c2b8 bfalse

alias c2r1 "alias c2cb c2b2; alias c2cr c2r2; alias flag_c2_cycle cfalse"
alias c2r2 "alias c2cb c2b3; alias c2cr c2r3"
alias c2r3 "alias c2cb c2b4; alias c2cr c2r4"
alias c2r4 "alias c2cb c2b5; alias c2cr c2r5"
alias c2r5 "alias c2cb c2b6; alias c2cr c2r6"
alias c2r6 "alias c2cb c2b7; alias c2cr c2r7"
alias c2r7 "alias c2cb c2b8; alias c2cr c2r8"
alias c2r8 "alias c2cb c2b1; alias c2cr c2r1; alias flag_c2_cycle ctrue; alias c2 c2_init"


// ---CONSTANT 3 ( 8 BIT; ver: 1.0 )

alias c3cb c3b1
alias c3cr c3r1
alias c3eb c3b8
alias flag_c3_cycle ctrue

alias c3_is_a "alias racycle c3cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c3_cycle; alias flag_order beta; alias raend c3eb"
alias c3_is_b "alias rbcycle c3cr; alias cycle_flag_beta flag_c3_cycle; alias rbend c3eb"

alias c3_init "alias alpha c3_is_a; alias beta c3_is_b; flag_order; alias c3 c3cb; c3cb"
alias c3 c3_init

alias c3b1 btrue
alias c3b2 btrue
alias c3b3 bfalse
alias c3b4 bfalse
alias c3b5 bfalse
alias c3b6 bfalse
alias c3b7 bfalse
alias c3b8 bfalse

alias c3r1 "alias c3cb c3b2; alias c3cr c3r2; alias flag_c3_cycle cfalse"
alias c3r2 "alias c3cb c3b3; alias c3cr c3r3"
alias c3r3 "alias c3cb c3b4; alias c3cr c3r4"
alias c3r4 "alias c3cb c3b5; alias c3cr c3r5"
alias c3r5 "alias c3cb c3b6; alias c3cr c3r6"
alias c3r6 "alias c3cb c3b7; alias c3cr c3r7"
alias c3r7 "alias c3cb c3b8; alias c3cr c3r8"
alias c3r8 "alias c3cb c3b1; alias c3cr c3r1; alias flag_c3_cycle ctrue; alias c3 c3_init"




// ---CONSTANT 4 ( 8 BIT; ver: 1.0 )

alias c4cb c4b1
alias c4cr c4r1
alias c4eb c4b8
alias flag_c4_cycle ctrue

alias c4_is_a "alias racycle c4cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c4_cycle; alias flag_order beta; alias raend c4eb"
alias c4_is_b "alias rbcycle c4cr; alias cycle_flag_beta flag_c4_cycle; alias rbend c4eb"

alias c4_init "alias alpha c4_is_a; alias beta c4_is_b; flag_order; alias c4 c4cb; c4cb"
alias c4 c4_init

alias c4b1 bfalse
alias c4b2 bfalse
alias c4b3 btrue
alias c4b4 bfalse
alias c4b5 bfalse
alias c4b6 bfalse
alias c4b7 bfalse
alias c4b8 bfalse

alias c4r1 "alias c4cb c4b2; alias c4cr c4r2; alias flag_c4_cycle cfalse"
alias c4r2 "alias c4cb c4b3; alias c4cr c4r3"
alias c4r3 "alias c4cb c4b4; alias c4cr c4r4"
alias c4r4 "alias c4cb c4b5; alias c4cr c4r5"
alias c4r5 "alias c4cb c4b6; alias c4cr c4r6"
alias c4r6 "alias c4cb c4b7; alias c4cr c4r7"
alias c4r7 "alias c4cb c4b8; alias c4cr c4r8"
alias c4r8 "alias c4cb c4b1; alias c4cr c4r1; alias flag_c4_cycle ctrue; alias c4 c4_init"


// ---CONSTANT 5 ( 8 BIT; ver: 1.0 )

alias c5cb c5b1
alias c5cr c5r1
alias c5eb c5b8
alias flag_c5_cycle ctrue

alias c5_is_a "alias racycle c5cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c5_cycle; alias flag_order beta; alias raend c5eb"
alias c5_is_b "alias rbcycle c5cr; alias cycle_flag_beta flag_c5_cycle; alias rbend c5eb"

alias c5_init "alias alpha c5_is_a; alias beta c5_is_b; flag_order; alias c5 c5cb; c5cb"
alias c5 c5_init

alias c5b1 btrue
alias c5b2 bfalse
alias c5b3 btrue
alias c5b4 bfalse
alias c5b5 bfalse
alias c5b6 bfalse
alias c5b7 bfalse
alias c5b8 bfalse

alias c5r1 "alias c5cb c5b2; alias c5cr c5r2; alias flag_c5_cycle cfalse"
alias c5r2 "alias c5cb c5b3; alias c5cr c5r3"
alias c5r3 "alias c5cb c5b4; alias c5cr c5r4"
alias c5r4 "alias c5cb c5b5; alias c5cr c5r5"
alias c5r5 "alias c5cb c5b6; alias c5cr c5r6"
alias c5r6 "alias c5cb c5b7; alias c5cr c5r7"
alias c5r7 "alias c5cb c5b8; alias c5cr c5r8"
alias c5r8 "alias c5cb c5b1; alias c5cr c5r1; alias flag_c5_cycle ctrue; alias c5 c5_init"



// ---CONSTANT 6 ( 8 BIT; ver: 1.0 )

alias c6cb c6b1
alias c6cr c6r1
alias c6eb c6b8
alias flag_c6_cycle ctrue

alias c6_is_a "alias racycle c6cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c6_cycle; alias flag_order beta; alias raend c6eb"
alias c6_is_b "alias rbcycle c6cr; alias cycle_flag_beta flag_c6_cycle; alias rbend c6eb"

alias c6_init "alias alpha c6_is_a; alias beta c6_is_b; flag_order; alias c6 c6cb; c6cb"
alias c6 c6_init

alias c6b1 bfalse
alias c6b2 btrue
alias c6b3 btrue
alias c6b4 bfalse
alias c6b5 bfalse
alias c6b6 bfalse
alias c6b7 bfalse
alias c6b8 bfalse

alias c6r1 "alias c6cb c6b2; alias c6cr c6r2; alias flag_c6_cycle cfalse"
alias c6r2 "alias c6cb c6b3; alias c6cr c6r3"
alias c6r3 "alias c6cb c6b4; alias c6cr c6r4"
alias c6r4 "alias c6cb c6b5; alias c6cr c6r5"
alias c6r5 "alias c6cb c6b6; alias c6cr c6r6"
alias c6r6 "alias c6cb c6b7; alias c6cr c6r7"
alias c6r7 "alias c6cb c6b8; alias c6cr c6r8"
alias c6r8 "alias c6cb c6b1; alias c6cr c6r1; alias flag_c6_cycle ctrue; alias c6 c6_init"


// ---CONSTANT 7 ( 8 BIT; ver: 1.0 )

alias c7cb c7b1
alias c7cr c7r1
alias c7eb c7b8
alias flag_c7_cycle ctrue

alias c7_is_a "alias racycle c7cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c7_cycle; alias flag_order beta; alias raend c7eb"
alias c7_is_b "alias rbcycle c7cr; alias cycle_flag_beta flag_c7_cycle; alias rbend c7eb"

alias c7_init "alias alpha c7_is_a; alias beta c7_is_b; flag_order; alias c7 c7cb; c7cb"
alias c7 c7_init

alias c7b1 btrue
alias c7b2 btrue
alias c7b3 btrue
alias c7b4 bfalse
alias c7b5 bfalse
alias c7b6 bfalse
alias c7b7 bfalse
alias c7b8 bfalse

alias c7r1 "alias c7cb c7b2; alias c7cr c7r2; alias flag_c7_cycle cfalse"
alias c7r2 "alias c7cb c7b3; alias c7cr c7r3"
alias c7r3 "alias c7cb c7b4; alias c7cr c7r4"
alias c7r4 "alias c7cb c7b5; alias c7cr c7r5"
alias c7r5 "alias c7cb c7b6; alias c7cr c7r6"
alias c7r6 "alias c7cb c7b7; alias c7cr c7r7"
alias c7r7 "alias c7cb c7b8; alias c7cr c7r8"
alias c7r8 "alias c7cb c7b1; alias c7cr c7r1; alias flag_c7_cycle ctrue; alias c7 c7_init"



// ---CONSTANT 8 ( 8 BIT; ver: 1.0 )

alias c8cb c8b1
alias c8cr c8r1
alias c8eb c8b8
alias flag_c8_cycle ctrue

alias c8_is_a "alias racycle c8cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c8_cycle; alias flag_order beta; alias raend c8eb"
alias c8_is_b "alias rbcycle c8cr; alias cycle_flag_beta flag_c8_cycle; alias rbend c8eb"

alias c8_init "alias alpha c8_is_a; alias beta c8_is_b; flag_order; alias c8 c8cb; c8cb"
alias c8 c8_init

alias c8b1 bfalse
alias c8b2 bfalse
alias c8b3 bfalse
alias c8b4 btrue
alias c8b5 bfalse
alias c8b6 bfalse
alias c8b7 bfalse
alias c8b8 bfalse

alias c8r1 "alias c8cb c8b2; alias c8cr c8r2; alias flag_c8_cycle cfalse"
alias c8r2 "alias c8cb c8b3; alias c8cr c8r3"
alias c8r3 "alias c8cb c8b4; alias c8cr c8r4"
alias c8r4 "alias c8cb c8b5; alias c8cr c8r5"
alias c8r5 "alias c8cb c8b6; alias c8cr c8r6"
alias c8r6 "alias c8cb c8b7; alias c8cr c8r7"
alias c8r7 "alias c8cb c8b8; alias c8cr c8r8"
alias c8r8 "alias c8cb c8b1; alias c8cr c8r1; alias flag_c8_cycle ctrue; alias c8 c8_init"


// ---CONSTANT 9 ( 8 BIT; ver: 1.0 )

alias c9cb c9b1
alias c9cr c9r1
alias c9eb c9b8
alias flag_c9_cycle ctrue

alias c9_is_a "alias racycle c9cr; alias default_t; alias default_f; alias cycle_flag_alpha flag_c9_cycle; alias flag_order beta; alias raend c9eb"
alias c9_is_b "alias rbcycle c9cr; alias cycle_flag_beta flag_c9_cycle; alias rbend c9eb"

alias c9_init "alias alpha c9_is_a; alias beta c9_is_b; flag_order; alias c9 c9cb; c9cb"
alias c9 c9_init

alias c9b1 btrue
alias c9b2 bfalse
alias c9b3 bfalse
alias c9b4 btrue
alias c9b5 bfalse
alias c9b6 bfalse
alias c9b7 bfalse
alias c9b8 bfalse

alias c9r1 "alias c9cb c9b2; alias c9cr c9r2; alias flag_c9_cycle cfalse"
alias c9r2 "alias c9cb c9b3; alias c9cr c9r3"
alias c9r3 "alias c9cb c9b4; alias c9cr c9r4"
alias c9r4 "alias c9cb c9b5; alias c9cr c9r5"
alias c9r5 "alias c9cb c9b6; alias c9cr c9r6"
alias c9r6 "alias c9cb c9b7; alias c9cr c9r7"
alias c9r7 "alias c9cb c9b8; alias c9cr c9r8"
alias c9r8 "alias c9cb c9b1; alias c9cr c9r1; alias flag_c9_cycle ctrue; alias c9 c9_init"



// ---CONSTANT A ( 8 BIT; ver: 1.0 )

alias cacb cab1
alias cacr car1
alias caeb cab8
alias flag_ca_cycle ctrue

alias ca_is_a "alias racycle cacr; alias default_t; alias default_f; alias cycle_flag_alpha flag_ca_cycle; alias flag_order beta; alias raend caeb"
alias ca_is_b "alias rbcycle cacr; alias cycle_flag_beta flag_ca_cycle; alias rbend caeb"

alias ca_init "alias alpha ca_is_a; alias beta ca_is_b; flag_order; alias ca cacb; cacb"
alias ca ca_init

alias cab1 bfalse
alias cab2 btrue
alias cab3 bfalse
alias cab4 btrue
alias cab5 bfalse
alias cab6 bfalse
alias cab7 bfalse
alias cab8 bfalse

alias car1 "alias cacb cab2; alias cacr car2; alias flag_ca_cycle cfalse"
alias car2 "alias cacb cab3; alias cacr car3"
alias car3 "alias cacb cab4; alias cacr car4"
alias car4 "alias cacb cab5; alias cacr car5"
alias car5 "alias cacb cab6; alias cacr car6"
alias car6 "alias cacb cab7; alias cacr car7"
alias car7 "alias cacb cab8; alias cacr car8"
alias car8 "alias cacb cab1; alias cacr car1; alias flag_ca_cycle ctrue; alias ca ca_init"


// ---CONSTANT B ( 8 BIT; ver: 1.0 )

alias cbcb cbb1
alias cbcr cbr1
alias cbeb cbb8
alias flag_cb_cycle ctrue

alias cb_is_a "alias racycle cbcr; alias default_t; alias default_f; alias cycle_flag_alpha flag_cb_cycle; alias flag_order beta; alias raend cbeb"
alias cb_is_b "alias rbcycle cbcr; alias cycle_flag_beta flag_cb_cycle; alias rbend cbeb"

alias cb_init "alias alpha cb_is_a; alias beta cb_is_b; flag_order; alias cb cbcb; cbcb"
alias cb cb_init

alias cbb1 btrue
alias cbb2 btrue
alias cbb3 bfalse
alias cbb4 btrue
alias cbb5 bfalse
alias cbb6 bfalse
alias cbb7 bfalse
alias cbb8 bfalse

alias cbr1 "alias cbcb cbb2; alias cbcr cbr2; alias flag_cb_cycle cfalse"
alias cbr2 "alias cbcb cbb3; alias cbcr cbr3"
alias cbr3 "alias cbcb cbb4; alias cbcr cbr4"
alias cbr4 "alias cbcb cbb5; alias cbcr cbr5"
alias cbr5 "alias cbcb cbb6; alias cbcr cbr6"
alias cbr6 "alias cbcb cbb7; alias cbcr cbr7"
alias cbr7 "alias cbcb cbb8; alias cbcr cbr8"
alias cbr8 "alias cbcb cbb1; alias cbcr cbr1; alias flag_cb_cycle ctrue; alias cb cb_init"



// ---CONSTANT C ( 8 BIT; ver: 1.0 )

alias cccb ccb1
alias cccr ccr1
alias cceb ccb8
alias flag_cc_cycle ctrue

alias cc_is_a "alias racycle cccr; alias default_t; alias default_f; alias cycle_flag_alpha flag_cc_cycle; alias flag_order beta; alias raend cceb"
alias cc_is_b "alias rbcycle cccr; alias cycle_flag_beta flag_cc_cycle; alias rbend cceb"

alias cc_init "alias alpha cc_is_a; alias beta cc_is_b; flag_order; alias cc cccb; cccb"
alias cc cc_init

alias ccb1 bfalse
alias ccb2 bfalse
alias ccb3 btrue
alias ccb4 btrue
alias ccb5 bfalse
alias ccb6 bfalse
alias ccb7 bfalse
alias ccb8 bfalse

alias ccr1 "alias cccb ccb2; alias cccr ccr2; alias flag_cc_cycle cfalse"
alias ccr2 "alias cccb ccb3; alias cccr ccr3"
alias ccr3 "alias cccb ccb4; alias cccr ccr4"
alias ccr4 "alias cccb ccb5; alias cccr ccr5"
alias ccr5 "alias cccb ccb6; alias cccr ccr6"
alias ccr6 "alias cccb ccb7; alias cccr ccr7"
alias ccr7 "alias cccb ccb8; alias cccr ccr8"
alias ccr8 "alias cccb ccb1; alias cccr ccr1; alias flag_cc_cycle ctrue; alias cc cc_init"



// ---CONSTANT D ( 8 BIT; ver: 1.0 )

alias cdcb cdb1
alias cdcr cdr1
alias cdeb cdb8
alias flag_cd_cycle ctrue

alias cd_is_a "alias racycle cdcr; alias default_t; alias default_f; alias cycle_flag_alpha flag_cd_cycle; alias flag_order beta; alias raend cdeb"
alias cd_is_b "alias rbcycle cdcr; alias cycle_flag_beta flag_cd_cycle; alias rbend cdeb"

alias cd_init "alias alpha cd_is_a; alias beta cd_is_b; flag_order; alias cd cdcb; cdcb"
alias cd cd_init

alias cdb1 btrue
alias cdb2 bfalse
alias cdb3 btrue
alias cdb4 btrue
alias cdb5 bfalse
alias cdb6 bfalse
alias cdb7 bfalse
alias cdb8 bfalse

alias cdr1 "alias cdcb cdb2; alias cdcr cdr2; alias flag_cd_cycle cfalse"
alias cdr2 "alias cdcb cdb3; alias cdcr cdr3"
alias cdr3 "alias cdcb cdb4; alias cdcr cdr4"
alias cdr4 "alias cdcb cdb5; alias cdcr cdr5"
alias cdr5 "alias cdcb cdb6; alias cdcr cdr6"
alias cdr6 "alias cdcb cdb7; alias cdcr cdr7"
alias cdr7 "alias cdcb cdb8; alias cdcr cdr8"
alias cdr8 "alias cdcb cdb1; alias cdcr cdr1; alias flag_cd_cycle ctrue; alias cd cd_init"


// ---CONSTANT E ( 8 BIT; ver: 1.0 )

alias cecb ceb1
alias cecr cer1
alias ceeb ceb8
alias flag_ce_cycle ctrue

alias ce_is_a "alias racycle cecr; alias default_t; alias default_f; alias cycle_flag_alpha flag_ce_cycle; alias flag_order beta; alias raend ceeb"
alias ce_is_b "alias rbcycle cecr; alias cycle_flag_beta flag_ce_cycle; alias rbend ceeb"

alias ce_init "alias alpha ce_is_a; alias beta ce_is_b; flag_order; alias ce cecb; cecb"
alias ce ce_init

alias ceb1 bfalse
alias ceb2 btrue
alias ceb3 btrue
alias ceb4 btrue
alias ceb5 bfalse
alias ceb6 bfalse
alias ceb7 bfalse
alias ceb8 bfalse

alias cer1 "alias cecb ceb2; alias cecr cer2; alias flag_ce_cycle cfalse"
alias cer2 "alias cecb ceb3; alias cecr cer3"
alias cer3 "alias cecb ceb4; alias cecr cer4"
alias cer4 "alias cecb ceb5; alias cecr cer5"
alias cer5 "alias cecb ceb6; alias cecr cer6"
alias cer6 "alias cecb ceb7; alias cecr cer7"
alias cer7 "alias cecb ceb8; alias cecr cer8"
alias cer8 "alias cecb ceb1; alias cecr cer1; alias flag_ce_cycle ctrue; alias ce ce_init"


// ---CONSTANT F ( 8 BIT; ver: 1.0 )

alias cfcb cfb1
alias cfcr cfr1
alias cfeb cfb8
alias flag_cf_cycle ctrue

alias cf_is_a "alias racycle cfcr; alias default_t; alias default_f; alias cycle_flag_alpha flag_cf_cycle; alias flag_order beta; alias raend cfeb"
alias cf_is_b "alias rbcycle cfcr; alias cycle_flag_beta flag_cf_cycle; alias rbend cfeb"

alias cf_init "alias alpha cf_is_a; alias beta cf_is_b; flag_order; alias cf cfcb; cfcb"
alias cf cf_init

alias cfb1 btrue
alias cfb2 btrue
alias cfb3 btrue
alias cfb4 btrue
alias cfb5 bfalse
alias cfb6 bfalse
alias cfb7 bfalse
alias cfb8 bfalse

alias cfr1 "alias cfcb cfb2; alias cfcr cfr2; alias flag_cf_cycle cfalse"
alias cfr2 "alias cfcb cfb3; alias cfcr cfr3"
alias cfr3 "alias cfcb cfb4; alias cfcr cfr4"
alias cfr4 "alias cfcb cfb5; alias cfcr cfr5"
alias cfr5 "alias cfcb cfb6; alias cfcr cfr6"
alias cfr6 "alias cfcb cfb7; alias cfcr cfr7"
alias cfr7 "alias cfcb cfb8; alias cfcr cfr8"
alias cfr8 "alias cfcb cfb1; alias cfcr cfr1; alias flag_cf_cycle ctrue; alias cf cf_init"