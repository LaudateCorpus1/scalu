echo "loading math"

//------------ core hooks-----------------------

alias btrue
alias bfalse
alias ctrue
alias cfalse



// ----boolean functions-------------------


// ----variable assignment-----------------

//vars

alias vat_ptr
alias vat_rettrue
alias vat_retfalse


//logic

alias vat "alias btrue vat_rettrue; alias bfalse vat_retfalse; vat_ptr"


// ----the not gate-----------------

//vars

alias not_ptr
alias not_rettrue
alias not_retfalse


//logic

alias not "alias btrue not_retfalse; alias bfalse not_rettrue; not_ptr"



// ----the or gate-------------------


//vars

alias or_ptr1
alias or_ptr2
alias or_rettrue
alias or_retfalse


//logic


alias or_false_branch "alias bfalse or_retfalse; or_ptr2"
alias or "alias btrue or_rettrue; alias bfalse or_false_branch; or_ptr1"

// ----the and gate--------------------

//vars

alias and_ptr1
alias and_ptr2
alias and_rettrue
alias and_retfalse


//logic

alias and_true_branch "alias btrue and_rettrue; and_ptr2"
alias and "alias btrue and_true_branch; alias bfalse and_retfalse; and_ptr1"

// ----the xor gate--------------------

//vars

alias xor_ptr1
alias xor_ptr2
alias xor_rettrue
alias xor_retfalse

//logic

alias xor_true_branch "alias btrue xor_retfalse; alias bfalse xor_rettrue"
alias xor_false_branch "alias bfalse xor_retfalse; alias btrue xor_rettrue"
alias xor "alias btrue xor_true_branch; alias bfalse xor_false_branch; xor_ptr1; xor_ptr2"



// ----operator space--------------


//vars

alias racycle
alias rbcycle
alias alpha
alias beta
alias cycle_flag_alpha
alias cycle_flag_beta
alias default_t
alias default_f
alias raend
alias rbend
alias flag_order alpha

//interfaces

alias rcycle "racycle; rbcycle"

alias deinit "alias racycle ; alias rbcycle ; alias cycle_flag_alpha; alias cycle_flag_beta; alias flag_order alpha ; alias default_t; alias default_f; alias raend; alias rbend"


//opcodes


//---dump register (binary)
//---dep: none
//---ir: none

//vars

alias dump_ptr r1

//logic


alias dump "alias btrue echo 1; alias bfalse echo 0; alias cfalse dump; alias ctrue deinit; dump2"
alias dump2 "dump_ptr; rcycle; cycle_flag_alpha"


//---dump register (hex)
//---dep none
//---ir: none

//vars

alias hd_ptr r1


//logic

alias hd "alias btrue hd_pause1; alias bfalse hd_pause0; hd_ptr"

alias hd0 "alias btrue hd_pause10; alias bfalse hd_pause00; hd_ptr"
alias hd1 "alias btrue hd_pause11; alias bfalse hd_pause01; hd_ptr"

alias hd00 "alias btrue hd_pause100; alias bfalse hd_pause000; hd_ptr"
alias hd01 "alias btrue hd_pause101; alias bfalse hd_pause001; hd_ptr"
alias hd10 "alias btrue hd_pause110; alias bfalse hd_pause010; hd_ptr"
alias hd11 "alias btrue hd_pause111; alias bfalse hd_pause011; hd_ptr"

alias hd000 "alias btrue hd_pause1000; alias bfalse hd_pause0000; hd_ptr"
alias hd001 "alias btrue hd_pause1001; alias bfalse hd_pause0001; hd_ptr"
alias hd010 "alias btrue hd_pause1010; alias bfalse hd_pause0010; hd_ptr"
alias hd011 "alias btrue hd_pause1011; alias bfalse hd_pause0011; hd_ptr"
alias hd100 "alias btrue hd_pause1100; alias bfalse hd_pause0100; hd_ptr"
alias hd101 "alias btrue hd_pause1101; alias bfalse hd_pause0101; hd_ptr"
alias hd110 "alias btrue hd_pause1110; alias bfalse hd_pause0110; hd_ptr"
alias hd111 "alias btrue hd_pause1111; alias bfalse hd_pause0111; hd_ptr"



alias hd_pause0 "rcycle; alias cfalse hd0; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1 "rcycle; alias cfalse hd1; alias ctrue deinit; cycle_flag_alpha"

alias hd_pause00 "rcycle; alias cfalse hd00; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause01 "rcycle; alias cfalse hd01; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause10 "rcycle; alias cfalse hd10; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause11 "rcycle; alias cfalse hd11; alias ctrue deinit; cycle_flag_alpha"

alias hd_pause000 "rcycle; alias cfalse hd000; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause001 "rcycle; alias cfalse hd001; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause010 "rcycle; alias cfalse hd010; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause011 "rcycle; alias cfalse hd011; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause100 "rcycle; alias cfalse hd100; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause101 "rcycle; alias cfalse hd101; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause110 "rcycle; alias cfalse hd110; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause111 "rcycle; alias cfalse hd111; alias ctrue deinit; cycle_flag_alpha"

alias hd_pause0000 "echo 0; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0001 "echo 1; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0010 "echo 2; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0011 "echo 3; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0100 "echo 4; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0101 "echo 5; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0110 "echo 6; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause0111 "echo 7; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1000 "echo 8; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1001 "echo 9; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1010 "echo a; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1011 "echo b; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1100 "echo c; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1101 "echo d; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1110 "echo e; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"
alias hd_pause1111 "echo f; rcycle; alias cfalse hd; alias ctrue deinit; cycle_flag_alpha"



//---addition (carry)
//---dep: none
//---ir: none


//vars

alias add_ptr1 r1
alias add_ptr2 r2

//internal flags

alias flag_overflow bfalse
alias flag_internal_inc bfalse


alias carry_bit bfalse
alias z_bit bfalse
alias y_bit bfalse
alias x_bit bfalse

//and logic

alias add_and_true_branch "alias btrue z_bit_t; alias bfalse z_bit_f; add_ptr2"

//xor logic


alias add_xor_true_branch "alias btrue y_bit_f; alias bfalse y_bit_t"
alias add_xor_false_branch "alias btrue y_bit_t; alias bfalse y_bit_f"

//xor2 logic

alias add_xor2_true_branch "alias btrue default_f; alias bfalse default_t"
alias add_xor2_false_branch "alias bfalse default_f; alias btrue default_t"

//and2 logic

alias add_and2_true_branch "alias btrue x_bit_t; alias bfalse x_bit_f; carry_bit"


//or logic

alias add_or_false_branch "alias bfalse carry_bit_f; x_bit"

//logic

alias add_overflow_true "alias flag_overflow btrue"
alias add_overflow_false
alias add_branch_true "alias btrue add_overflow_true; alias bfalse add_overflow_false; carry_bit; alias carry_bit bfalse; deinit"

alias z_bit_t "alias z_bit btrue"
alias z_bit_f "alias z_bit bfalse"

alias y_bit_t "alias y_bit btrue"
alias y_bit_f "alias y_bit bfalse"

alias x_bit_t "alias x_bit btrue"
alias x_bit_f "alias x_bit bfalse"

alias carry_bit_t "alias carry_bit btrue"
alias carry_bit_f "alias carry_bit bfalse"


alias add " alias cfalse add2; alias ctrue add_branch_true; add2"

alias add2 "   alias btrue add_and_true_branch; alias bfalse z_bit_f; add_ptr1;   alias btrue add_xor_true_branch; alias bfalse add_xor_false_branch; add_ptr1; add_ptr2;   alias btrue add_xor2_true_branch; alias bfalse add_xor2_false_branch; y_bit; carry_bit;   alias btrue add_and2_true_branch; alias bfalse x_bit_f; y_bit;   alias btrue carry_bit_t; alias bfalse add_or_false_branch; z_bit; alias flag_internal_inc bfalse; rcycle; cycle_flag_alpha"



// ---increment
// ---dep: add
// ---ir: none

//vars

alias inc_ptr r1


//logic

alias inc "alias flag_internal_inc btrue; alias add_ptr1 inc_ptr; alias add_ptr2 flag_internal_inc; add"



// ---decrement
// ---dep: add
// ---ir: none

//vars

alias dec_ptr r1

//logic

alias dec "alias add_ptr1 dec_ptr; alias add_ptr2 btrue; add"


// ---copy
// ---dep: none
// ---ir: none

//vars

alias copy_ptr1 r1
alias copy_ptr2 r2

//logic

alias copy "alias btrue; alias bfalse; copy_ptr1; alias cfalse copy2; alias ctrue deinit; alias btrue default_t; alias bfalse default_f; copy2"
alias copy2 " copy_ptr2; rcycle; cycle_flag_alpha"



// ---bitwise negation
// ---dep: none
// ---ir: none

//vars 

alias bneg_ptr r1


//logic

alias bneg "alias btrue default_f; alias bfalse default_t; alias cfalse bneg2; alias ctrue deinit; bneg2"
alias bneg2 "bneg_ptr; rcycle; cycle_flag_alpha"



// ---bitwise and
// ---dep: none
// ---ir: none

//vars

alias band_ptr1 r1
alias band_ptr2 r2


//logic

alias band_true_branch "alias btrue default_t; band_ptr2"
alias band "alias cfalse band2; alias ctrue deinit; alias bfalse default_f; band2"
alias band2 "alias btrue band_true_branch; band_ptr1; rcycle; cycle_flag_alpha"


// ---bitwise or
// ---dep: none
// ---ir: none

//vars

alias bor_ptr1 r1
alias bor_ptr2 r2

//logic

alias bor_false_branch "alias bfalse default_f; bor_ptr2"
alias bor "alias cfalse bor2; alias ctrue deinit; alias btrue default_t; bor2"
alias bor2 "alias bfalse bor_false_branch; bor_ptr1; rcycle; cycle_flag_alpha"



// ---bitwise xor
// ---dep: none
// ---ir: none

//vars

alias bxor_ptr1 r1
alias bxor_ptr2 r2

//logic

alias bxor "alias xor_ptr1 bxor_ptr1; alias xor_ptr2 bxor_ptr2; alias xor_rettrue default_t; alias xor_retfalse default_f; alias cfalse bxor2; alias ctrue deinit; bxor2"
alias bxor2 "xor; rcycle; cycle_flag_alpha"


// ---arithmetic negation
// ---dep: bneg, inc
// ---ir: none

//vars

alias aneg_ptr r1

//logic

alias aneg "alias bneg_ptr aneg_ptr; bneg; alias inc_ptr aneg_ptr; inc"



// ---subtraction
// ---dep: copy, aneg, add
// ---ir: ry

//vars

alias sub_ptr1 r1
alias sub_ptr2 r2


//logic

alias sub "alias copy_ptr1 ry; alias copy_ptr2 sub_ptr2; copy; alias aneg_ptr ry; aneg; alias add_ptr1 sub_ptr1; alias add_ptr2 ry; add"



// ---is-zero
// ---dep: none
// ---ir: none

//vars

alias zero_ptr r1
alias zero_rettrue
alias zero_retfalse


// logic


alias zero "alias btrue zero_ne; alias bfalse; alias ctrue zero_end_t; alias cfalse zero2 ; zero2"
alias zero2 "zero_ptr; rcycle; cycle_flag_alpha"

alias zero_ne "alias ctrue zero_end_f; alias cfalse equal_ne2; zero_ne2"
alias zero_ne2 "rcycle; cycle_flag_alpha"

alias zero_end_t "deinit; zero_rettrue"
alias zero_end_f "deinit; zero_retfalse"




// ---is-equal
// ---dep: none
// ---ir: none

//vars

alias equal_ptr1 r1
alias equal_ptr2 r2
alias equal_rettrue
alias equal_retfalse

// logic

alias equal_xor_true_branch "alias btrue; alias bfalse equal_ne"
alias equal_xor_false_branch "alias bfalse; alias btrue equal_ne"

alias equal "alias ctrue equal_end_t; alias cfalse equal2; equal2"
alias equal2 "alias btrue equal_xor_true_branch; alias bfalse equal_xor_false_branch; equal_ptr1; equal_ptr2; rcycle; cycle_flag_alpha"

alias equal_ne "alias ctrue equal_end_f; alias cfalse equal_ne2; equal_ne2"
alias equal_ne2 "rcycle; cycle_flag_alpha"

alias equal_end_t "deinit; equal_rettrue"
alias equal_end_f "deinit; equal_retfalse"


// ---greater-than-zero
// ---dep: none
// ---ir: none

//vars


alias gtz_ptr r1
alias gtz_rettrue
alias gtz_retfalse
alias gtz_flag_equality bfalse


//logic

alias gtz "alias btrue; alias bfalse; gtz_ptr; alias btrue gtz_retfalse; alias bfalse gtz2; raend"
alias gtz2 "alias btrue gtz_rettrue; alias bfalse gtz3; gtz_flag_equality"
alias gtz3 "alias zero_ptr gtz_ptr; alias zero_rettrue gtz_retfalse; alias zero_retfalse gtz_rettrue; zero"



// ---less-than-zero
// ---dep: none
// ---ir: none

//vars

alias ltz_ptr r1
alias ltz_rettrue
alias ltz_retfalse
alias ltz_flag_equality bfalse

//logic

alias ltz "alias btrue; alias bfalse; ltz_ptr; alias btrue ltz_rettrue; alias bfalse ltz2; raend"
alias ltz2 "alias btrue ltz3; alias bfalse ltz_retfalse; ltz_flag_equality"
alias ltz3 "alias zero_ptr ltz_ptr; alias zero_rettrue ltz_rettrue; alias zero_retfalse ltz_retfalse"

// ---greater-than
// ---dep: copy, sub, gtz
// ---ir: rx

//vars

alias gt_ptr1 r1
alias gt_ptr2 r2
alias gt_rettrue 
alias gt_retfalse
alias gt_flag_equality bfalse

//logic

alias gt "alias copy_ptr1 rx; alias copy_ptr2 gt_ptr1; copy; alias sub_ptr1 rx; alias sub_ptr2 gt_ptr2; sub; alias gtz_ptr rx; alias gtz_flag_equality gt_flag_equality; alias gtz_rettrue gt_rettrue; alias gtz_retfalse gt_retfalse; gtz"


// ---less-than
// ---dep: copy, sub, ltz
// ---ir: rx

//vars

alias lt_ptr1 r1
alias lt_ptr2 r2
alias lt_rettrue
alias lt_retfalse
alias lt_flag_equality bfalse

//logic

alias lt "alias copy_ptr1 rx; alias copy_ptr2 lt_ptr1; copy; alias sub_ptr1 rx; alias sub_ptr2 lt_ptr2; sub; alias ltz_ptr rx; alias ltz_flag_equality lt_flag_equality; alias ltz_rettrue lt_rettrue; alias ltz_retfalse lt_retfalse; ltz"




// ---absolute value
// ---dep: aneg
// ---ir: none

//vars

alias abs_ptr r1

//logic

alias abs "alias btrue; alias bfalse; abs_ptr; alias btrue abs2; raend"
alias abs2 "alias aneg_ptr r1; aneg"


// ---randomize
// ---dep: copy, add, inc, bxor
// ---ir: ry, rx

//vars

alias rand_ptr r1

//logic

alias rand "alias copy_ptr1 ry; alias copy_ptr2 rand_ptr1; copy ; alias add_ptr1 rand_ptr1; alias add_ptr2 ry; add; alias inc_ptr rx; inc; alias add_ptr1 rand_ptr1; alias add_ptr2 rx; add; alias bxor_ptr1 rand_ptr1; alias bxor_ptr2 ry; bxor"
